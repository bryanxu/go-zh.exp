// Generated by running
//		maketables -url=http://www.unicode.org/Public/cldr/22/core.zip
// DO NOT EDIT

package locale

const unknownLang = 583

// lang holds an alphabetically sorted list of bcp47 language identifiers.
// All entries are 4 bytes. The index of the identifier (divided by 4) is the language ID.
// For 2-byte language identifiers, the two successive bytes have the following meaning:
//     - if the first letter of the 2- and 3-letter ISO codes are the same:
//       the second and third letter of the 3-letter ISO code.
//     - otherwise: a 0 and a by 2 bits right-shifted index into mappedLang.
// For 3-byte language identifiers the 4th byte is 0.
// Size: 2536 bytes
var lang string = "" +
	"aaarabbkace\x00ach\x00ada\x00ady\x00aeveaffrafa\x00afh\x00ag" +
	"q\x00ain\x00aju\x00akkaakk\x00ale\x00alg\x00als\x00alt\x00am" +
	"mhami\x00anrgang\x00anp\x00apa\x00arraarb\x00arc\x00arn\x00a" +
	"rp\x00art\x00arw\x00assmasa\x00ast\x00ath\x00aus\x00avvaawa" +
	"\x00ayymayr\x00azzeazj\x00baakbad\x00bai\x00bal\x00ban\x00ba" +
	"s\x00bat\x00bax\x00bbj\x00bcc\x00bcl\x00beelbej\x00bem\x00be" +
	"r\x00bez\x00bfd\x00bgulbhihbho\x00biisbik\x00bin\x00bkm\x00b" +
	"la\x00bmambnenbnc\x00bnn\x00bnt\x00boodbrrebra\x00brx\x00bso" +
	"sbss\x00btk\x00bua\x00bug\x00bum\x00bxk\x00bxr\x00byn\x00byv" +
	"\x00caatcad\x00cai\x00car\x00cau\x00cay\x00cch\x00ceheceb" +
	"\x00cel\x00cgg\x00chhachb\x00chg\x00chk\x00chm\x00chn\x00cho" +
	"\x00chp\x00chr\x00chy\x00ckb\x00cld\x00cmc\x00cmn\x00cooscop" +
	"\x00cpe\x00cpf\x00cpp\x00crrecrh\x00crp\x00csescsb\x00cuhucu" +
	"s\x00cvhvcwd\x00cyymdaandak\x00dar\x00dav\x00day\x00deeudel" +
	"\x00den\x00dgo\x00dgr\x00dhd\x00dik\x00din\x00diq\x00dje\x00" +
	"doi\x00dra\x00dsb\x00dua\x00dum\x00dvivdyo\x00dyu\x00dzzodzg" +
	"\x00ebu\x00eeweefi\x00egy\x00eka\x00ekk\x00elllelx\x00emk" +
	"\x00enngenm\x00eopoes\x00:esk\x00etsteuusewo\x00faasfan\x00f" +
	"at\x00ffulfiinfil\x00fiu\x00fjijfoaofon\x00frrafrm\x00fro" +
	"\x00frr\x00frs\x00fuc\x00fur\x00fyrygalegaa\x00gay\x00gaz" +
	"\x00gba\x00gbo\x00gdlagem\x00gez\x00gil\x00gllggmh\x00gnrngn" +
	"o\x00goh\x00gon\x00gor\x00got\x00grb\x00grc\x00gsw\x00guujgu" +
	"g\x00guz\x00gvlvgwi\x00gya\x00haauhai\x00hak\x00haw\x00hdn" +
	"\x00heebhea\x00hiinhil\x00him\x00hit\x00hmn\x00homohrrvhsb" +
	"\x00hsn\x00htathuunhup\x00hyyehzerianaiba\x00ibb\x00idndiele" +
	"igboiiiiijo\x00ikpkike\x00ilo\x00inc\x00ine\x00inh\x00iodoir" +
	"a\x00iro\x00isslittaiukujapnjbo\x00jgo\x00jmc\x00jpr\x00jrb" +
	"\x00jvavkaatkaa\x00kab\x00kac\x00kaj\x00kam\x00kar\x00kaw" +
	"\x00kbd\x00kbl\x00kcg\x00kde\x00kea\x00kfo\x00kgonkha\x00khi" +
	"\x00khk\x00kho\x00khq\x00kiikkjuakkazkkj\x00klalkln\x00kmhmk" +
	"mb\x00kmr\x00knanknc\x00kng\x00knn\x00koorkok\x00kos\x00kpe" +
	"\x00kpv\x00kraukrc\x00krl\x00kro\x00kru\x00ksasksb\x00ksf" +
	"\x00ksh\x00kuurkum\x00kut\x00kvomkw\x00\vkyirlaatlad\x00lag" +
	"\x00lah\x00lam\x00lbtzlbk\x00lez\x00lgugliimlninloaolol\x00l" +
	"oz\x00ltitluublua\x00lui\x00lun\x00luo\x00lus\x00luy\x00lvav" +
	"lvs\x00mad\x00maf\x00mag\x00mai\x00mak\x00man\x00map\x00mas" +
	"\x00mde\x00mdf\x00mdr\x00men\x00mer\x00mfe\x00mglgmga\x00mgh" +
	"\x00mgo\x00mhahmhr\x00mirimic\x00min\x00mis\x00mkkdmkh\x00ml" +
	"almnonmnc\x00mni\x00mno\x00moh\x00mos\x00mrarmssamtltmua\x00" +
	"mul\x00mun\x00mup\x00mus\x00mwl\x00mwr\x00myyamye\x00myn\x00" +
	"myv\x00naaunah\x00nai\x00nan\x00nap\x00naq\x00nbobnddends" +
	"\x00neepnew\x00ngdonia\x00nic\x00niu\x00nlldnmg\x00nnnonnh" +
	"\x00noornog\x00non\x00nqo\x00nrblnso\x00nub\x00nus\x00nvavnw" +
	"c\x00nyyanym\x00nyn\x00nyo\x00nzi\x00occiojjiojg\x00omrmorri" +
	"osssosa\x00ota\x00oto\x00paanpaa\x00pag\x00pal\x00pam\x00pap" +
	"\x00pau\x00pbu\x00peo\x00pes\x00phi\x00phn\x00piliplolplt" +
	"\x00pnb\x00pon\x00pra\x00pro\x00psusptorpwn\x00quueqxp\x00ra" +
	"j\x00rap\x00rar\x00rmohrmy\x00rnunroonroa\x00rof\x00rom\x00r" +
	"uusrup\x00rw\x00%rwk\x00saansad\x00sah\x00sai\x00sal\x00sam" +
	"\x00saq\x00sas\x00sat\x00sba\x00sbp\x00scrdscn\x00sco\x00sdn" +
	"dsemesee\x00seh\x00sel\x00sem\x00ses\x00sfb\x00sgagsga\x00sg" +
	"g\x00sgn\x00shcrshi\x00shn\x00shu\x00siinsid\x00sio\x00sit" +
	"\x00sklksllvsla\x00smmosma\x00smi\x00smj\x00smn\x00sms\x00sn" +
	"nasnk\x00soomsog\x00son\x00spy\x00sqqisrrpsrc\x00srn\x00srr" +
	"\x00srx\x00ssswssa\x00ssy\x00stotsuunsuk\x00sus\x00sux\x00sv" +
	"weswwaswb\x00swc\x00swh\x00syc\x00syr\x00taamtai\x00tao\x00t" +
	"ay\x00teeltem\x00teo\x00ter\x00tet\x00tggkthhatiirtig\x00tiv" +
	"\x00tkuktkl\x00tlgltlh\x00tli\x00tmh\x00tnsntoontog\x00tpi" +
	"\x00trurtrv\x00tssotsi\x00tsu\x00ttatttq\x00tum\x00tup\x00tu" +
	"t\x00tvl\x00twwitwq\x00tyahtyv\x00tzm\x00udm\x00ugiguga\x00u" +
	"kkrumb\x00umu\x00und\x00urrduzzbuzn\x00vai\x00veenvgt\x00vii" +
	"evoolvot\x00vun\x00walnwae\x00wak\x00wal\x00war\x00was\x00we" +
	"n\x00woolxal\x00xhhoxog\x00xpe\x00xsl\x00yao\x00yap\x00yav" +
	"\x00ybb\x00ydd\x00yiidyoorypk\x00yue\x00zahazai\x00zap\x00zb" +
	"l\x00zen\x00zhhoznd\x00zsm\x00zuulzun\x00zxx\x00zyb\x00zza" +
	"\x00\xff\xff\xff\xff"

// mappedLang holds an alphabetically sorted list of non-canonical language
// identifiers (by definition of BCP47 or CLDR) with a mapping to their cannonical
// equivalents. Each entry is 4 bytes.  The first 3 bytes are the language code.
// (May be a 2-letter code followed by a space.) The 4th byte is one of the following values:
//     - [a-z]:   The canonical code is the first letter of the non-canonical code plus
//                this character. The majority of mappings can be expressed this way.
//     - [0-'a']: Index into mappedLangID, an array of language ids.
// Size: 320 bytes
var mappedLang string = "" +
	"aju\x14als%arbrayryazjzbcc\x01bcl\x02bxk\x1abxr\x04cld(cmn,c" +
	"or\x18cwdrdgo\tdhd\x1fdik\bdiq-ekktemk\x1besk\x13fat\x00fucf" +
	"gaz gbo\x0fgno\x0egugngya\rhbs&hdn\x10hea\x12him'ikeuin diw " +
	"\x11ji *jw vkhk\x1dkin$kmrukncrknggknn\x16kpvvlbk\x03lvsvmhr" +
	"\x05mo \"mol\"mup!no bojgjpbuspes\vplt\x1cpnb\x19qxpurmy#sh " +
	"&spa\nspy\x15srccswhwtgl\ftl \fttq)tw \x00twi\x00umu\x06uznz" +
	"xpe\x17xsl\ayddizai+zsm\x1ezyba\xff\xff\xff\xff"

// mappedLangID holds a list of language IDs, which correspond to the 4-byte index
// into lang. A negative index indicates a mapping to a tag.
// Size: 92 bytes, 46 elements
var mappedLangID = [46]int16{
	13, 46, 64, 70, 80, 102, 133, 134, 139, 142, 164, 169,
	174, 191, 202, 205, 215, 219, 225, 243, 260, 287, 296, 298,
	313, 318, 336, 344, 353, 366, 373, 381, 423, 453, 459, 462,
	465, 516, -1, 521, 536, 556, 612, 618, 621, 628,
}

// Size: 23 bytes
var altTag string = "sr_Latn"

// tagAlias holds a mapping from legacy and grandfathered tags to their locale ID.
// Size: 497 bytes
var tagAlias = map[string]uint16{
	"aa-SAAHO":   524,
	"art-lojban": 256,
	"i-ami":      20,
	"i-bnn":      71,
	"i-hak":      216,
	"i-klingon":  554,
	"i-lux":      320,
	"i-navajo":   413,
	"i-pwn":      450,
	"i-tao":      539,
	"i-tay":      540,
	"i-tsu":      565,
	"no-BOKMAL":  392,
	"no-NYNORSK": 403,
	"no-bok":     392,
	"no-nyn":     403,
	"sgn-BE-FR":  488,
	"sgn-BE-NL":  589,
	"sgn-CH-DE":  491,
	"zh-guoyu":   621,
	"zh-hakka":   216,
	"zh-min":     583,
	"zh-min-nan": 389,
	"zh-xiang":   229,
}

const unknownScript = 158

// Size: 656 bytes
var script string = "" +
	"AfakArabArmiArmnAvstBaliBamuBassBatkBengBlisBopoBrahBraiBugi" +
	"BuhdCakmCansCariChamCherCirtCoptCprtCyrlCyrsDevaDsrtDuplEgyd" +
	"EgyhEgypElbaEthiGeokGeorGlagGothGranGrekGujrGuruHangHaniHano" +
	"HansHantHebrHiraHluwHmngHrktHungIndsItalJavaJpanJurcKaliKana" +
	"KharKhmrKhojKndaKoreKpelKthiLanaLaooLatfLatgLatnLepcLimbLina" +
	"LinbLisuLomaLyciLydiMandManiMayaMendMercMeroMlymMongMoonMroo" +
	"MteiMymrNarbNbatNkgbNkooNshuOgamOlckOrkhOryaOsmaPalmPermPhag" +
	"PhliPhlpPhlvPhnxPlrdPrtiRjngRoroRunrSamrSaraSarbSaurSgnwShaw" +
	"ShrdSindSinhSoraSundSyloSyrcSyreSyrjSyrnTagbTakrTaleTaluTaml" +
	"TangTavtTeluTengTfngTglgThaaThaiTibtTirhUgarVaiiVispWaraWole" +
	"XpeoXsuxYiiiZinhZmthZsymZxxxZyyyZzzz\xff\xff\xff\xff"

const unknownRegion = 337

// isoRegionOffset needs to be added to the index of regionISO to obtain the regionID
// for 2-letter ISO codes. (The first isoRegionOffset regionIDs are reserved for
// the UN.M49 codes used for groups.)
const isoRegionOffset = 30

// regionISO holds a list of alphabetically sorted 2-letter ISO region codes.
// Each 2-letter codes is followed by two bytes with the following meaning:
//     - [A-Z}{2}: the first letter of the 2-letter code plus these two
//                 letters form the 3-letter ISO code.
//     - 0, n:     index into altRegionISO3.
// Size: 1252 bytes
var regionISO string = "" +
	"AAAAACSCADNDAEREAFFGAGTGAIIAALLBAMRMANNTAOGOAQTAARRGASSMATUT" +
	"AUUSAWBWAXLAAZZEBAIHBBRBBDGDBEELBFFABGGRBHHRBIDIBJENBLLMBMMU" +
	"BNRNBOOLBQESBRRABSHSBTTNBUURBVVTBWWABYLRBZLZCAANCCCKCDODCFAF" +
	"CGOGCHHECIIVCKOKCLHLCMMRCNHNCOOLCPPTCRRICS\x00\x00CUUBCVPVCW" +
	"UWCXXRCYYPCZZEDDDRDEEUDGGADJJIDKNKDMMADOOMDZZAEA  ECCUEESTEG" +
	"GYEHSHERRIESSPETTHEU\x00\x03FIINFJJIFKLKFMSMFOROFRRAFXXXGAAB" +
	"GBBRGDRDGEEOGFUFGGGYGHHAGIIBGLRLGMMBGNINGPLPGQNQGRRCGS\x00" +
	"\x06GTTMGUUMGWNBGYUYHKKGHMMDHNNDHRRVHTTIHUUNIC  IDDNIERLILSR" +
	"IMMNINNDIOOTIQRQIRRNISSLITTAJEEYJMAMJOORJPPNKEENKGGZKHHMKIIR" +
	"KM\x00\tKNNAKP\x00\fKRORKWWTKY\x00\x0fKZAZLAAOLBBNLCCALIIELK" +
	"KALRBRLSSOLTTULUUXLVVALYBYMAARMCCOMDDAMENEMFAFMGDGMHHLMKKDML" +
	"LIMMMRMNNGMOACMPNPMQTQMRRTMSSRMTLTMUUSMVDVMWWIMXEXMYYSMZOZNA" +
	"AMNCCLNEERNFFKNGGANIICNLLDNOORNPPLNRRUNTTZNUIUNZZLOMMNPAANPE" +
	"ERPFYFPGNGPHHLPKAKPLOLPM\x00\x12PNCNPRRIPSSEPTRTPWLWPYRYQAAT" +
	"QMMMQNNNQOOOQPPPQQQQQRRRQSSSQTTTQVVVQWWWQXXXQYYYQZZZREEUROOU" +
	"RS\x00\x15RUUSRWWASAAUSBLBSCYCSDDNSEWESGGPSHHNSIVNSJJMSKVKSL" +
	"LESMMRSNENSOOMSRURSSSDSTTPSUUNSVLVSXXMSYYRSZWZTAAATCCATDCDTF" +
	"\x00\x18TGGOTHHATJJKTKKLTLLSTMKMTNUNTOONTPMPTRURTTTOTVUVTWWN" +
	"TZZAUAKRUGGAUMMIUSSAUYRYUZZBVAATVCCTVEENVGGBVIIRVNNMVUUTWFLF" +
	"WSSMXAAAXBBBXCCCXDDDXEEEXFFFXGGGXHHHXIIIXJJJXKKKXLLLXMMMXNNN" +
	"XOOOXPPPXQQQXRRRXSSSXTTTXUUUXVVVXWWWXXXXXYYYXZZZYDMDYEEMYT" +
	"\x00\x1bYUUGZAAFZMMBZRARZWWEZZZZ\xff\xff\xff\xff"

// altRegionISO3 holds a list of 3-letter region codes that cannot be
// mapped to 2-letter codes using the default algorithm. This is a short list.
// Size: 46 bytes
var altRegionISO3 string = "SCGQUUSGSCOMPRKCYMSPMSRBATFMYT"

// altRegionIDs holsd a list of regionIDs the positions of which match those
// of the 3-letter ISO codes in altRegionISO3.
// Size: 20 bytes, 10 elements
var altRegionIDs = [10]uint16{
	85, 108, 130, 160, 162, 165, 222, 245, 273, 331,
}

// m49 maps regionIDs to UN.M49 codes. The first isoRegionOffset entries are
// codes indicating collections of regions.
// Size: 676 bytes, 338 elements
var m49 = [338]uint16{
	1, 2, 3, 5, 9, 11, 13, 14, 15, 17, 18, 19,
	21, 29, 30, 34, 35, 39, 53, 54, 57, 61, 142, 143,
	145, 150, 151, 154, 155, 419, 958, 0, 20, 784, 4, 28,
	660, 8, 51, 530, 24, 10, 32, 16, 40, 36, 533, 248,
	31, 70, 52, 50, 56, 854, 100, 48, 108, 204, 652, 60,
	96, 68, 535, 76, 44, 64, 104, 74, 72, 112, 84, 124,
	166, 180, 140, 178, 756, 384, 184, 152, 120, 156, 170, 0,
	188, 891, 192, 132, 531, 162, 196, 203, 278, 276, 0, 262,
	208, 212, 214, 12, 0, 218, 233, 818, 732, 232, 724, 231,
	967, 246, 242, 238, 583, 234, 250, 249, 266, 826, 308, 268,
	254, 831, 288, 292, 304, 270, 324, 312, 226, 300, 239, 320,
	316, 624, 328, 344, 334, 340, 191, 332, 348, 0, 360, 372,
	376, 833, 356, 86, 368, 364, 352, 380, 832, 388, 400, 392,
	404, 417, 116, 296, 174, 659, 408, 410, 414, 136, 398, 418,
	422, 662, 438, 144, 430, 426, 440, 442, 428, 434, 504, 492,
	498, 499, 663, 450, 584, 807, 466, 104, 496, 446, 580, 474,
	478, 500, 470, 480, 462, 454, 484, 458, 508, 516, 540, 562,
	574, 566, 558, 528, 578, 524, 520, 536, 570, 554, 512, 591,
	604, 258, 598, 608, 586, 616, 666, 612, 630, 275, 620, 585,
	600, 634, 959, 960, 961, 962, 963, 964, 965, 966, 968, 969,
	970, 971, 972, 638, 642, 688, 643, 646, 682, 90, 690, 729,
	752, 702, 654, 705, 744, 703, 694, 674, 686, 706, 740, 728,
	678, 810, 222, 534, 760, 748, 0, 796, 148, 260, 768, 764,
	762, 772, 626, 795, 788, 776, 626, 792, 780, 798, 158, 834,
	804, 800, 581, 840, 858, 860, 336, 670, 862, 92, 850, 704,
	548, 876, 882, 973, 974, 975, 976, 977, 978, 979, 980, 981,
	982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 720, 887, 175, 891, 710, 894, 180,
	716, 999,
}

// currency holds an alphabetically sorted list of canonical 3-letter currency identifiers.
// Each identifier is followed by a byte of which the 6 most significant bits
// indicated the rounding and the least 2 significant bits indicate the
// number of decimal positions.
// Size: 1204 bytes
var currency string = "" +
	"ADP\x04AED\x06AFA\x06AFN\x04ALK\x06ALL\x04AMD\x04ANG\x06AOA" +
	"\x06AOK\x06AON\x06AOR\x06ARA\x06ARL\x06ARM\x06ARP\x06ARS\x06" +
	"ATS\x06AUD\x06AWG\x06AZM\x06AZN\x06BAD\x06BAM\x06BAN\x06BBD" +
	"\x06BDT\x06BEC\x06BEF\x06BEL\x06BGL\x06BGM\x06BGN\x06BGO\x06" +
	"BHD\aBIF\x04BMD\x06BND\x06BOB\x06BOL\x06BOP\x06BOV\x06BRB" +
	"\x06BRC\x06BRE\x06BRL\x06BRN\x06BRR\x06BRZ\x06BSD\x06BTN\x06" +
	"BUK\x06BWP\x06BYB\x06BYR\x04BZD\x06CAD\x06CDF\x06CHE\x06CHF" +
	"\x16CHW\x06CLE\x06CLF\x04CLP\x04CNX\x06CNY\x06COP\x04COU\x06" +
	"CRC\x04CSD\x06CSK\x06CUC\x06CUP\x06CVE\x06CYP\x06CZK\x06DDM" +
	"\x06DEM\x06DJF\x04DKK\x06DOP\x06DZD\x06ECS\x06ECV\x06EEK\x06" +
	"EGP\x06ERN\x06ESA\x06ESB\x06ESP\x04ETB\x06EUR\x06FIM\x06FJD" +
	"\x06FKP\x06FRF\x06GBP\x06GEK\x06GEL\x06GHC\x06GHS\x06GIP\x06" +
	"GMD\x06GNF\x04GNS\x06GQE\x06GRD\x06GTQ\x06GWE\x06GWP\x06GYD" +
	"\x04HKD\x06HNL\x06HRD\x06HRK\x06HTG\x06HUF\x04IDR\x04IEP\x06" +
	"ILP\x06ILR\x06ILS\x06INR\x06IQD\x04IRR\x04ISJ\x06ISK\x04ITL" +
	"\x04JMD\x06JOD\aJPY\x04KES\x06KGS\x06KHR\x06KMF\x04KPW\x04KR" +
	"H\x06KRO\x06KRW\x04KWD\aKYD\x06KZT\x06LAK\x04LBP\x04LKR\x06L" +
	"RD\x06LSL\x06LTL\x06LTT\x06LUC\x06LUF\x04LUL\x06LVL\x06LVR" +
	"\x06LYD\aMAD\x06MAF\x06MCF\x06MDC\x06MDL\x06MGA\x04MGF\x04MK" +
	"D\x06MKN\x06MLF\x06MMK\x04MNT\x04MOP\x06MRO\x04MTL\x06MTP" +
	"\x06MUR\x04MVP\x06MVR\x06MWK\x06MXN\x06MXP\x06MXV\x06MYR\x06" +
	"MZE\x06MZM\x06MZN\x06NAD\x06NGN\x06NIC\x06NIO\x06NLG\x06NOK" +
	"\x06NPR\x06NZD\x06OMR\aPAB\x06PEI\x06PEN\x06PES\x06PGK\x06PH" +
	"P\x06PKR\x04PLN\x06PLZ\x06PTE\x06PYG\x04QAR\x06RHD\x06ROL" +
	"\x06RON\x06RSD\x04RUB\x06RUR\x06RWF\x04SAR\x06SBD\x06SCR\x06" +
	"SDD\x06SDG\x06SDP\x06SEK\x06SGD\x06SHP\x06SIT\x06SKK\x06SLL" +
	"\x04SOS\x04SRD\x06SRG\x06SSP\x06STD\x04SUR\x06SVC\x06SYP\x04" +
	"SZL\x06THB\x06TJR\x06TJS\x06TMM\x04TMT\x06TND\aTOP\x06TPE" +
	"\x06TRL\x04TRY\x06TTD\x06TWD\x06TZS\x04UAH\x06UAK\x06UGS\x06" +
	"UGX\x04USD\x06USN\x06USS\x06UYI\x06UYP\x06UYU\x06UZS\x04VEB" +
	"\x06VEF\x06VND\x04VNN\x06VUV\x04WST\x06XAF\x04XAG\x06XAU\x06" +
	"XBA\x06XBB\x06XBC\x06XBD\x06XCD\x06XDR\x06XEU\x06XFO\x06XFU" +
	"\x06XOF\x04XPD\x06XPF\x04XPT\x06XRE\x06XSU\x06XTS\x06XUA\x06" +
	"XXX\x06YDD\x06YER\x04YUD\x06YUM\x06YUN\x06YUR\x06ZAL\x06ZAR" +
	"\x06ZMK\x04ZRN\x06ZRZ\x06ZWD\x04ZWL\x06ZWR\x06\xff\xff\xff" +
	"\xff"

const unknownCurrency = 281

// Size: 7.2K (7322 bytes); Check: 74C99E0B
